<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fnkk的个人博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-07T05:44:05.715Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fnkk</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>perceptions</title>
    <link href="http://example.com/2023/02/07/perception/"/>
    <id>http://example.com/2023/02/07/perception/</id>
    <published>2023-02-07T05:42:31.000Z</published>
    <updated>2023-02-07T05:44:05.715Z</updated>
    
    <content type="html"><![CDATA[<ol><li>快乐需要付出代价，要么遭受苦难，要么透支空虚。</li></ol>]]></content>
    
    
    <summary type="html">some perceptions in life</summary>
    
    
    
    <category term="随笔" scheme="http://example.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>solidity advanced study notes</title>
    <link href="http://example.com/2023/02/03/solidity-study-adanced-notes/"/>
    <id>http://example.com/2023/02/03/solidity-study-adanced-notes/</id>
    <published>2023-02-03T05:35:02.000Z</published>
    <updated>2023-02-03T07:15:59.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="接收ETH"><a href="#接收ETH" class="headerlink" title="接收ETH"></a>接收ETH</h2><ul><li>Solidity支持两种特殊的回调函数，receive()和fallback()，他们主要在两种情况下被使用：<ol><li>接收ETH</li><li>处理合约中不存在的函数调用（代理合约proxy contract）<br>  <strong>注意：</strong>在solidity 0.6.x版本之前，语法上只有 fallback() 函数，用来接收用户发送的ETH时调用以及在被调用函数签名没有匹配到时，来调用。 0.6版本之后，solidity才将 fallback() 函数拆分成 receive() 和 fallback() 两个函数。</li></ol></li></ul><h3 id="接收ETH函数-receive"><a href="#接收ETH函数-receive" class="headerlink" title="接收ETH函数 receive"></a>接收ETH函数 receive</h3><ul><li>receive()只用于处理接收ETH。一个合约最多有一个receive()函数，声明方式与一般函数不一样，不需要function关键字：receive() external payable { … }。receive()函数不能有任何的参数，不能返回任何值，必须包含external和payable。</li></ul><p>当合约接收ETH的时候，receive()会被触发。receive()最好不要执行太多的逻辑因为如果别人用send和transfer方法发送ETH的话，gas会限制在2300，receive()太复杂可能会触发Out of Gas报错；如果用call就可以自定义gas执行更复杂的逻辑（这三种发送ETH的方法我们之后会讲到）。</p><p>我们可以在receive()里发送一个event，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 定义事件</span><br><span class="line">event Received(address Sender, uint Value);</span><br><span class="line">// 接收ETH时释放Received事件</span><br><span class="line">receive() external payable &#123;</span><br><span class="line">    emit Received(msg.sender, msg.value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有些恶意合约，会在receive() 函数（老版本的话，就是 fallback() 函数）嵌入恶意消耗gas的内容或者使得执行故意失败的代码，导致一些包含退款和转账逻辑的合约不能正常工作，因此写包含退款等逻辑的合约时候，一定要注意这种情况。</p><h3 id="回退函数-fallback"><a href="#回退函数-fallback" class="headerlink" title="回退函数 fallback"></a>回退函数 fallback</h3><ul><li>fallback()函数会在调用合约不存在的函数时被触发。可用于接收ETH，也可以用于代理合约proxy contract。fallback()声明时不需要function关键字，必须由external修饰，一般也会用payable修饰，用于接收ETH:fallback() external payable { … }。</li></ul><p>我们定义一个fallback()函数，被触发时候会释放fallbackCalled事件，并输出msg.sender，msg.value和msg.data:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// fallback</span><br><span class="line">fallback() external payable&#123;</span><br><span class="line">    emit fallbackCalled(msg.sender, msg.value, msg.data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="发送ETH"><a href="#发送ETH" class="headerlink" title="发送ETH"></a>发送ETH</h2><h3 id="transfer"><a href="#transfer" class="headerlink" title="transfer"></a>transfer</h3><ul><li>用法是接收方地址.transfer(发送ETH数额)。</li><li>transfer()的gas限制是2300，足够用于转账，但对方合约的fallback()或receive()函数不能实现太复杂的逻辑。</li><li>transfer()如果转账失败，会自动revert（回滚交易）。<br>代码样例，注意里面的_to填ReceiveETH合约的地址，amount是ETH转账金额：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 用transfer()发送ETH</span><br><span class="line">function transferETH(address payable _to, uint256 amount) external payable&#123;</span><br><span class="line">    _to.transfer(amount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="sender"><a href="#sender" class="headerlink" title="sender"></a>sender</h3><ul><li>用法是接收方地址.send(发送ETH数额)。</li><li>send()的gas限制是2300，足够用于转账，但对方合约的fallback()或receive()函数不能实现太复杂的逻辑。</li><li>send()如果转账失败，不会revert。</li><li>send()的返回值是bool，代表着转账成功或失败，需要额外代码处理一下。<br>代码样例：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// send()发送ETH</span><br><span class="line">function sendETH(address payable _to, uint256 amount) external payable&#123;</span><br><span class="line">    // 处理下send的返回值，如果失败，revert交易并发送error</span><br><span class="line">    bool success = _to.send(amount);</span><br><span class="line">    if(!success)&#123;</span><br><span class="line">        revert SendFailed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><ul><li>用法是接收方地址.call{value: 发送ETH数额}(“”)。</li><li>call()没有gas限制，可以支持对方合约fallback()或receive()函数实现复杂逻辑。</li><li>call()如果转账失败，不会revert。</li><li>call()的返回值是(bool, data)，其中bool代表着转账成功或失败，需要额外代码处理一下。<br>代码样例：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// call()发送ETH</span><br><span class="line">function callETH(address payable _to, uint256 amount) external payable&#123;</span><br><span class="line">    // 处理下call的返回值，如果失败，revert交易并发送error</span><br><span class="line">    (bool success,) = _to.call&#123;value: amount&#125;(&quot;&quot;);</span><br><span class="line">    if(!success)&#123;</span><br><span class="line">        revert CallFailed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>call没有gas限制，最为灵活，是最提倡的方法；</li><li>transfer有2300 gas限制，但是发送失败会自动revert交易，是次优选择；</li><li>send有2300 gas限制，而且发送失败不会自动revert交易，几乎没有人用它。</li></ul>]]></content>
    
    
    <summary type="html">solidity进阶学习笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>block chain introduction</title>
    <link href="http://example.com/2023/02/02/blockChain-introduction/"/>
    <id>http://example.com/2023/02/02/blockChain-introduction/</id>
    <published>2023-02-02T01:38:02.000Z</published>
    <updated>2023-02-02T09:29:37.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web3和web2的区别"><a href="#web3和web2的区别" class="headerlink" title="web3和web2的区别"></a>web3和web2的区别</h2><ul><li>介绍传统的web2应用，阐述web2应用的中心化特点，阐述传统中心化应用的痛点（可以引用暴雪的例子）。引出web3的概念，区块链技术是实现web3的主流方案。</li></ul><h2 id="介绍区块链的前世今生，从比特币到以太坊。"><a href="#介绍区块链的前世今生，从比特币到以太坊。" class="headerlink" title="介绍区块链的前世今生，从比特币到以太坊。"></a>介绍区块链的前世今生，从比特币到以太坊。</h2><h3 id="比特币"><a href="#比特币" class="headerlink" title="比特币"></a>比特币</h3><h3 id="以太坊"><a href="#以太坊" class="headerlink" title="以太坊"></a>以太坊</h3><h2 id="Dapp开发及展示"><a href="#Dapp开发及展示" class="headerlink" title="Dapp开发及展示"></a>Dapp开发及展示</h2>]]></content>
    
    
    <summary type="html">区块链的介绍大纲</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>solidity study notes</title>
    <link href="http://example.com/2023/02/01/solidity-study-notes/"/>
    <id>http://example.com/2023/02/01/solidity-study-notes/</id>
    <published>2023-02-01T09:59:02.000Z</published>
    <updated>2023-02-03T03:03:41.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="solidit-入门"><a href="#solidit-入门" class="headerlink" title="solidit 入门"></a>solidit 入门</h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><h4 id="Solidity中的变量类型"><a href="#Solidity中的变量类型" class="headerlink" title="Solidity中的变量类型"></a>Solidity中的变量类型</h4><ul><li>数值类型(Value Type)：包括布尔型，整数型等等，这类变量赋值时候直接传递数值。</li><li>引用类型(Reference Type)：包括数组和结构体，这类变量占空间大，赋值时候直接传递地址（类似指针）。</li><li>映射类型(Mapping Type): Solidity里的哈希表。</li><li>函数类型(Function Type)：Solidity文档里把函数归到数值类型，但我觉得他跟其他类型差别很大，所以单独分一类。</li></ul><h4 id="数值类型-1"><a href="#数值类型-1" class="headerlink" title="数值类型"></a>数值类型</h4><ol><li>布尔型<br>取值为true和false<br>布尔值的运算符和js相似</li><li>整型<br>常用包括<br><code>// 整型  int public _int = -1; // 整数，包括负数  uint public _uint = 1; // 正整数  uint256 public _number = 20220330; // 256位正整数</code></li><li>地址类型<br>地址类型(address)存储一个 20 字节的值（以太坊地址的大小）。地址类型也有成员变量，并作为所有合约的基础。有普通的地址和可以转账ETH的地址（payable）。其中，payable修饰的地址相对普通地址多了transfer和send两个成员。在payable修饰的地址中，send执行失败不会影响当前合约的执行（但是返回false值，需要开发人员检查send返回值）。balance和transfer()，可以用来查询ETH余额以及安全转账（内置执行失败的处理）。<br><code> // 地址  address public _address = 0x7A58c0Be72BE218B41C608b7Fe7C5bB630736C71;  address payable public _address1 = payable(_address); // payable address，可以转账、查余额  // 地址类型的成员  uint256 public balance = _address1.balance; // balance of address</code></li><li>定长字节数组<br>字节数组bytes分两种，一种定长（byte, bytes8, bytes32），另一种不定长。定长的属于数值类型，不定长的是引用类型（之后讲）。 定长bytes可以存一些数据，消耗gas比较少。<br><code> // 固定长度的字节数组  bytes32 public _byte32 = &quot;MiniSolidity&quot;;   bytes1 public _byte = _byte32[0]; </code><br>MiniSolidity变量以字节的方式存储进变量_byte32，转换成16进制为：0x4d696e69536f6c69646974790000000000000000000000000000000000000000</li></ol><p>_byte变量存储_byte32的第一个字节，为0x4d。<br>5. 枚举 enum<br>枚举（enum）是solidity中用户定义的数据类型。它主要用于为uint分配名称，使程序易于阅读和维护。它与C语言中的enum类似，使用名称来代替从0开始的uint：<br><code>    // 用enum将uint 0， 1， 2表示为Buy, Hold, Sell     enum ActionSet &#123; Buy, Hold, Sell &#125;     // 创建enum变量 action     ActionSet action = ActionSet.Buy;</code><br>它可以显式的和uint相互转换，并会检查转换的正整数是否在枚举的长度内，不然会报错：<br><code>    // enum可以和uint显式的转换     function enumToUint() external view returns(uint)&#123;         return uint(action);     &#125;</code></p><h4 id="函数类型"><a href="#函数类型" class="headerlink" title="函数类型"></a>函数类型</h4><ol><li><p>function：声明函数时的固定用法，想写函数，就要以function关键字开头。</p></li><li><p><function name>：函数名。</p></li><li><p>(<parameter types>)：圆括号里写函数的参数，也就是要输入到函数的变量类型和名字。</p></li><li><p>{internal|external|public|private}：函数可见性说明符，一共4种。没标明函数类型的，默认public。合约之外的函数，即”自由函数”，始终具有隐含internal可见性。</p><ul><li>public: 内部外部均可见。</li><li>private: 只能从本合约内部访问，继承的合约也不能用。</li><li>external: 只能从合约外部访问（但是可以用this.f()来调用，f是函数名）。</li><li>internal: 只能从合约内部访问，继承的合约可以用。<br> <strong>Note 1:</strong> 没有标明可见性类型的函数，默认为public。</li></ul><p> <strong>Note 2:</strong> public|private|internal 也可用于修饰状态变量。 public变量会自动生成同名的getter函数，用于查询数值。</p><p> <strong>Note 3:</strong> 没有标明可见性类型的状态变量，默认为internal。</p></li><li><p>[pure|view|payable]：决定函数权限&#x2F;功能的关键字。payable（可支付的）很好理解，带着它的函数，运行的时候可以给合约转入ETH。pure和view的介绍见下一节。</p></li><li><p>[returns ()]：函数返回的变量类型和名称。</p></li></ol><h4 id="函数输出"><a href="#函数输出" class="headerlink" title="函数输出"></a>函数输出</h4><h4 id="变量存储和作用域"><a href="#变量存储和作用域" class="headerlink" title="变量存储和作用域"></a>变量存储和作用域</h4><h4 id="数据位置"><a href="#数据位置" class="headerlink" title="数据位置"></a>数据位置</h4><ul><li>solidity数据存储位置有三类：storage，memory和calldata。不同存储位置的gas成本不同。storage类型的数据存在链上，类似计算机的硬盘，消耗gas多；memory和calldata类型的临时存在内存里，消耗gas少。大致用法：<ol><li>storage：合约里的状态变量默认都是storage，存储在链上。</li><li>memory：函数里的参数和临时变量一般用memory，存储在内存中，不上链。</li><li>calldata：和memory类似，存储在内存中，不上链。与memory的不同点在于calldata变量不能修改（immutable），一般用于函数的参数。</li></ol></li></ul><h4 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h4><h5 id="数组-Array"><a href="#数组-Array" class="headerlink" title="数组 Array"></a>数组 Array</h5><ul><li>数组（Array）是solidity常用的一种变量类型，用来存储一组数据（整数，字节，地址等等）。数组分为固定长度数组和可变长度数组两种：<ul><li>固定长度数组：在声明时指定数组的长度。用T[k]的格式声明，其中T是元素的类型，k是长度，例如：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 固定长度 Array</span><br><span class="line">uint[8] array1;</span><br><span class="line">bytes1[5] array2;</span><br><span class="line">address[100] array3;</span><br></pre></td></tr></table></figure></li><li>可变长度数组（动态数组）：在声明时不指定数组的长度。用T[]的格式声明，其中T是元素的类型，例如：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 可变长度 Array</span><br><span class="line">uint[] array4;</span><br><span class="line">bytes1[] array5;</span><br><span class="line">address[] array6;</span><br><span class="line">bytes array7;</span><br></pre></td></tr></table></figure><strong>注意：</strong> bytes比较特殊，是数组，但是不用加[]。另外，不能用byte[]声明单字节数组，可以使用bytes或bytes1[]。在gas上，bytes比bytes1[]便宜。因为bytes1[]在memory中要增加31个字节进行填充，会产生额外的gas。但是在storage中，由于内存紧密打包，不存在字节填充。</li></ul></li><li><h6 id="数组创建过程"><a href="#数组创建过程" class="headerlink" title="数组创建过程"></a>数组创建过程</h6></li></ul><p>在solidity里，创建数组有一些规则：</p><ul><li>对于memory修饰的动态数组，可以用new操作符来创建，但是必须声明长度，并且声明后长度不能改变。例子：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// memory动态数组</span><br><span class="line">uint[] memory array8 = new uint[](5);</span><br><span class="line">bytes memory array9 = new bytes(9);</span><br></pre></td></tr></table></figure></li><li>数组字面常数(Array Literals)是写作表达式形式的数组，用方括号包着来初始化array的一种方式，并且里面每一个元素的type是以第一个元素为准的，例如[1,2,3]里面所有的元素都是uint8类型，因为在solidity中如果一个值没有指定type的话，默认就是最小单位的该type，这里int的默认最小单位类型就是uint8。而[uint(1),2,3]里面的元素都是uint类型，因为第一个元素指定了是uint类型了，我们都以第一个元素为准。 下面的合约中，对于f函数里面的调用，如果我们没有显式对第一个元素进行uint强转的话，是会报错的，因为如上所述我们其实是传入了uint8类型的array，可是g函数需要的却是uint类型的array，就会报错了。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// SPDX-License-Identifier: GPL-3.0</span><br><span class="line">pragma solidity &gt;=0.4.16 &lt;0.9.0;</span><br><span class="line"></span><br><span class="line">contract C &#123;</span><br><span class="line">    function f() public pure &#123;</span><br><span class="line">        g([uint(1), 2, 3]);</span><br><span class="line">    &#125;</span><br><span class="line">    function g(uint[3] memory) public pure &#123;</span><br><span class="line">        // ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>如果创建的是动态数组，你需要一个一个元素的赋值。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uint[] memory x = new uint[](3);</span><br><span class="line">x[0] = 1;</span><br><span class="line">x[1] = 3;</span><br><span class="line">x[2] = 4;</span><br></pre></td></tr></table></figure></li><li><h6 id="数组成员"><a href="#数组成员" class="headerlink" title="数组成员"></a>数组成员</h6><ul><li>length: 数组有一个包含元素数量的length成员，memory数组的长度在创建后是固定的。</li><li>push(): 动态数组和bytes拥有push()成员，可以在数组最后添加一个0元素。</li><li>push(x): 动态数组和bytes拥有push(x)成员，可以在数组最后添加一个x元素。</li><li>pop(): 动态数组和bytes拥有pop()成员，可以移除数组最后一个元素。</li></ul></li></ul><h5 id="结构体-Struct"><a href="#结构体-Struct" class="headerlink" title="结构体 Struct"></a>结构体 Struct</h5><ul><li>Solidity支持通过构造结构体的形式定义新的类型。创建结构体的方法：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 结构体</span><br><span class="line">struct Student&#123;</span><br><span class="line">    uint256 id;</span><br><span class="line">    uint256 score; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="映射类型"><a href="#映射类型" class="headerlink" title="映射类型"></a>映射类型</h4><h4 id="常数-constant和immutable"><a href="#常数-constant和immutable" class="headerlink" title="常数 constant和immutable"></a>常数 constant和immutable</h4>]]></content>
    
    
    <summary type="html">solidity学习笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>react hook learning notes</title>
    <link href="http://example.com/2023/02/01/react-hook/"/>
    <id>http://example.com/2023/02/01/react-hook/</id>
    <published>2023-02-01T01:38:02.000Z</published>
    <updated>2023-02-03T08:56:47.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="react-hook学习笔记"><a href="#react-hook学习笔记" class="headerlink" title="react hook学习笔记"></a>react hook学习笔记</h2><h3 id="useState"><a href="#useState" class="headerlink" title="useState"></a>useState</h3><ul><li>需要使用变量时，通过解构的方式使用useState()，参数为变量的初始值<code>const [productId, setProductId] = useState();</code></li><li>setProductId(更新数据)的两种方式<ol><li>直接调用函数传入新值，如<code>setProductId(newVal)</code></li><li>使用函数式更新，如<code>setProductId(()=&gt;&#123;return newVal&#125;)</code></li><li>如果定义的是引用类型变量如<code>const [teacher, setTeacher] = useState(&#123;name:&#39;Ryan&#39;,sex:&#39;man&#39;&#125;)</code>,更新时可以使用函数式更新并借助拓展运算符，如<code>setTeacher(()=&gt;&#123;return &#123;...teacher,name:&#39;Chris&#39;&#125;&#125;)</code>，把新的属性合并到新的对象中</li></ol></li></ul><h3 id="useState惰性初始化"><a href="#useState惰性初始化" class="headerlink" title="useState惰性初始化"></a>useState惰性初始化</h3><ul><li>惰性state<br>  initialState 参数只会在组件的初始渲染中起作用，后续渲染会被忽略</li><li>复杂初始state的定义<br>  初始state需要通过复杂计算获得，则可以传入一个函数，在函数中计算并返回初始的 state<br>  <strong>如果更新的数据与上次一样，React 将跳过子组件的渲染及 effect 的执行</strong></li></ul><h3 id="useContext"><a href="#useContext" class="headerlink" title="useContext"></a>useContext</h3><ol><li>把需要父子组件通信的数据使用createContext函数创建</li><li>在父组件中使用.Provider包裹子组件，把需要传递的数据通过父组件的value属性传递</li><li>在子组件中使用useContext方法获取到value传递的值</li></ol><h3 id="useEffect"><a href="#useEffect" class="headerlink" title="useEffect"></a>useEffect</h3><ul><li>React在完成对DOM的更新后会执行，默认情况下，React会在每次渲染后调用副作用函数，包括第一次渲染的时候</li><li>useEffect有两个参数，第一个参数是副作用的处理函数，第二参数是在与该副作用关联的状态或属性依赖数组</li><li>第二个参数为空数组时，表示该副作用函数不依赖任何值的变化，只在组件渲染后执行一次</li><li>useEffect相当于Vue生命周期中的mouted，在组件渲染后执行，它的return函数相当于destroy在下次渲染前执行</li></ul><h3 id="useReducer"><a href="#useReducer" class="headerlink" title="useReducer"></a>useReducer</h3><ul><li>useReducer接收3个参数，第一个参数是处理状态更新的reducer，第二个参数是状态初始值，第三个参数是状态初始化函数<code>const [state, dispathch] = userReducer(reducer, initialArg, init);</code></li></ul>]]></content>
    
    
    <summary type="html">react hook学习笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>git common commands</title>
    <link href="http://example.com/2023/01/30/git-common-commands/"/>
    <id>http://example.com/2023/01/30/git-common-commands/</id>
    <published>2023-01-30T01:38:01.000Z</published>
    <updated>2023-01-30T08:49:55.463Z</updated>
    
    
    <summary type="html">git使用笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>truffleUseMap</title>
    <link href="http://example.com/2023/01/30/truffleUseMap/"/>
    <id>http://example.com/2023/01/30/truffleUseMap/</id>
    <published>2023-01-30T01:38:01.000Z</published>
    <updated>2023-02-03T01:47:28.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Truffle使用笔记"><a href="#Truffle使用笔记" class="headerlink" title="Truffle使用笔记"></a>Truffle使用笔记</h2><h3 id="geth相关"><a href="#geth相关" class="headerlink" title="geth相关"></a>geth相关</h3><h4 id="geth常用命令"><a href="#geth常用命令" class="headerlink" title="geth常用命令"></a>geth常用命令</h4><ul><li>geth启动命令<br>  <code>geth --datadir data --networkid 666 --http --http.port 8545 --allow-insecure-unlock console 2&gt;output.log console</code></li><li>geth解锁账号<br>  <code>personal.unlockAccount(&#39;account&#39;)</code> 然后输入密码 1234</li><li>定义一定金额 单位Wei<br>这里的数字采用字符串的形式输入，避免精度丢失<br>  <code>amt_1 = web3.utils.toWei(&#39;1&#39;, &#39;ether&#39;);</code></li></ul><h3 id="truffle相关"><a href="#truffle相关" class="headerlink" title="truffle相关"></a>truffle相关</h3><h4 id="truffle部署测试流程"><a href="#truffle部署测试流程" class="headerlink" title="truffle部署测试流程"></a>truffle部署测试流程</h4><ol><li>编译好合约后，使用命令truffle migration或者truffle depoly迁移（部署）合约，需要启动geth客户端，同时解锁账户，开始挖矿</li><li>部署完成后，使用命令turflle console进入js 控制台，控制台中有migrations里定义的对象，可以调用对象的deploy方法的回调测试合约的函数，如<br><code>EcommerceStore.deployed().then(function(i) &#123;i.getProduct.call(1).then(function(f) &#123;console.log(f)&#125;)&#125;)</code></li></ol><h3 id="solidity相关"><a href="#solidity相关" class="headerlink" title="solidity相关"></a>solidity相关</h3><ul><li>高版本的solidity中，强制要求所有string类型后面加上memory</li><li>now关键字已废用，采用block.timestamp代替</li><li>需要transfer的地址要加上payable关键字</li><li>keccak256用法<code>result =  keccak256(abi.encodePacked(value, fake, secret))</code></li></ul><h3 id="truffle-box-react相关"><a href="#truffle-box-react相关" class="headerlink" title="truffle-box-react相关"></a>truffle-box-react相关</h3><ul><li>合约交互代码写在ContractBtns组件中</li><li>Take a look at client&#x2F;src&#x2F;contexts&#x2F;EthContext. This context maintains a global state and provides web3.js functionalities to the rest of the app.</li></ul>]]></content>
    
    
    <summary type="html">truffle使用笔记</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="web" scheme="http://example.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/01/24/hello-world/"/>
    <id>http://example.com/2023/01/24/hello-world/</id>
    <published>2023-01-24T07:52:17.468Z</published>
    <updated>2023-01-24T07:52:17.468Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo-Theme-Sakura</title>
    <link href="http://example.com/2018/12/12/Hexo-Theme-Sakura/"/>
    <id>http://example.com/2018/12/12/Hexo-Theme-Sakura/</id>
    <published>2018-12-12T14:16:01.000Z</published>
    <updated>2021-11-09T14:13:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>hexo-theme-sakura主题 <a href="https://github.com/honjun/hexo-theme-sakura/blob/master/README.md">English document</a></p><p>基于WordPress主题<a href="https://github.com/mashirozx/Sakura/">Sakura</a>修改成Hexo的主题。</p><p><a href="https://sakura.hojun.cn/">demo预览</a></p><p>正在开发中……</p><p><img src="https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg"></p><h2 id="交流群"><a href="#交流群" class="headerlink" title="交流群"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p><p>若你是创作者，加群QQ: 194472590</p><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>首页大屏视频</li><li>首页随机封面</li><li>图片懒加载</li><li>valine评论</li><li>fancy-box相册</li><li>pjax支持，音乐不间断</li><li>aplayer音乐播放器</li><li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li></ul><h2 id="赞赏作者"><a href="#赞赏作者" class="headerlink" title="赞赏作者"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p><p><a href="https://www.paypal.me/hojuncn">paypal</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg">Alipay 支付宝</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg">WeChat Pay 微信支付</a></p><h2 id="未完善的使用教程"><a href="#未完善的使用教程" class="headerlink" title="未完善的使用教程"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p><h2 id="1、主题下载安装"><a href="#1、主题下载安装" class="headerlink" title="1、主题下载安装"></a>1、主题下载安装</h2><p><a href="https://github.com/honjun/hexo-theme-sakura">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p><p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p><h2 id="2、主题配置"><a href="#2、主题配置" class="headerlink" title="2、主题配置"></a>2、主题配置</h2><h3 id="博客根目录下的-config配置"><a href="#博客根目录下的-config配置" class="headerlink" title="博客根目录下的_config配置"></a>博客根目录下的_config配置</h3><p>站点</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">你的站点名</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">站点简介</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">作者名</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-cn</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure><p>部署</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">github:</span> <span class="string">你的github仓库地址</span></span><br><span class="line">    <span class="comment"># coding: 你的coding仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>备份 （使用hexo b发布备份到远程仓库）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">backup</span> <span class="string">my</span> <span class="string">blog</span> <span class="string">of</span> <span class="string">https://honjun.github.io/</span></span><br><span class="line">  <span class="attr">repository:</span></span><br><span class="line">    <span class="comment"># 你的github仓库地址,备份分支名  （建议新建backup分支）</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/honjun/honjun.github.io.git,backup</span></span><br><span class="line">    <span class="comment"># coding: https://git.coding.net/hojun/hojun.git,backup</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主题目录下的-config配置"><a href="#主题目录下的-config配置" class="headerlink" title="主题目录下的_config配置"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># site name</span></span><br><span class="line"><span class="comment"># 站点名 【改】</span></span><br><span class="line"><span class="attr">prefixName:</span> <span class="string">さくら荘その</span></span><br><span class="line"><span class="attr">siteName:</span> <span class="string">hojun</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># favicon and site master avatar</span></span><br><span class="line"><span class="comment"># 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/images/favicon.ico</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/img/custom/avatar.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点url 【改】</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://sakura.hojun.cn</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点介绍（或者说是个人签名）【改】</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Live</span> <span class="string">your</span> <span class="string">life</span> <span class="string">with</span> <span class="string">passion!</span> <span class="string">With</span> <span class="string">some</span> <span class="string">drive!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg</span></span><br><span class="line"><span class="attr">cdn:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/cdn@1.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启pjax 【选】</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点首页的公告信息 【改】</span></span><br><span class="line"><span class="attr">notice:</span> <span class="string">hexo-Sakura主题已经开源，目前正在开发中...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 懒加载的加载中图片 【选】</span></span><br><span class="line"><span class="attr">lazyloadImg:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点菜单配置 【选】</span></span><br><span class="line"><span class="attr">menus:</span></span><br><span class="line">  <span class="string">首页:</span> &#123; <span class="attr">path:</span> <span class="string">/</span>, <span class="attr">fa:</span> <span class="string">fa-fort-awesome</span> <span class="string">faa-shake</span> &#125;</span><br><span class="line">  <span class="string">归档:</span> &#123; <span class="attr">path:</span> <span class="string">/archives</span>, <span class="attr">fa:</span> <span class="string">fa-archive</span> <span class="string">faa-shake</span>, <span class="attr">submenus:</span> &#123; </span><br><span class="line">    <span class="string">技术:</span> &#123;<span class="attr">path:</span> <span class="string">/categories/技术/</span>, <span class="attr">fa:</span> <span class="string">fa-code</span> &#125;, </span><br><span class="line">    <span class="string">生活:</span> &#123;<span class="attr">path:</span> <span class="string">/categories/生活/</span>, <span class="attr">fa:</span> <span class="string">fa-file-text-o</span> &#125;, </span><br><span class="line">    <span class="string">资源:</span> &#123;<span class="attr">path:</span> <span class="string">/categories/资源/</span>, <span class="attr">fa:</span> <span class="string">fa-cloud-download</span> &#125;, </span><br><span class="line">    <span class="string">随想:</span> &#123;<span class="attr">path:</span> <span class="string">/categories/随想/</span>, <span class="attr">fa:</span> <span class="string">fa-commenting-o</span> &#125;,</span><br><span class="line">    <span class="string">转载:</span> &#123;<span class="attr">path:</span> <span class="string">/categories/转载/</span>, <span class="attr">fa:</span> <span class="string">fa-book</span> &#125;</span><br><span class="line">  &#125; &#125;</span><br><span class="line">  <span class="string">清单:</span> &#123; <span class="attr">path:</span> <span class="string">javascript:;</span>, <span class="attr">fa:</span> <span class="string">fa-list-ul</span> <span class="string">faa-vertical</span>, <span class="attr">submenus:</span> &#123; </span><br><span class="line">    <span class="string">书单:</span> &#123;<span class="attr">path:</span> <span class="string">/tags/悦读/</span>, <span class="attr">fa:</span> <span class="string">fa-th-list</span> <span class="string">faa-bounce</span> &#125;, </span><br><span class="line">    <span class="string">番组:</span> &#123;<span class="attr">path:</span> <span class="string">/bangumi/</span>, <span class="attr">fa:</span> <span class="string">fa-film</span> <span class="string">faa-vertical</span> &#125;, </span><br><span class="line">    <span class="string">歌单:</span> &#123;<span class="attr">path:</span> <span class="string">/music/</span>, <span class="attr">fa:</span> <span class="string">fa-headphones</span> &#125;,</span><br><span class="line">    <span class="string">图集:</span> &#123;<span class="attr">path:</span> <span class="string">/tags/图集/</span>, <span class="attr">fa:</span> <span class="string">fa-photo</span> &#125;</span><br><span class="line">  &#125; &#125;</span><br><span class="line">  <span class="string">留言板:</span> &#123; <span class="attr">path:</span> <span class="string">/comment/</span>, <span class="attr">fa:</span> <span class="string">fa-pencil-square-o</span> <span class="string">faa-tada</span> &#125;</span><br><span class="line">  <span class="string">友人帐:</span> &#123; <span class="attr">path:</span> <span class="string">/links/</span>, <span class="attr">fa:</span> <span class="string">fa-link</span> <span class="string">faa-shake</span> &#125;</span><br><span class="line">  <span class="string">赞赏:</span> &#123; <span class="attr">path:</span> <span class="string">/donate/</span>, <span class="attr">fa:</span> <span class="string">fa-heart</span> <span class="string">faa-pulse</span> &#125;</span><br><span class="line">  <span class="string">关于:</span> &#123; <span class="attr">path:</span> <span class="string">/</span>, <span class="attr">fa:</span> <span class="string">fa-leaf</span> <span class="string">faa-wrench</span> , <span class="attr">submenus:</span> &#123; </span><br><span class="line">    <span class="string">我？:</span> &#123;<span class="attr">path:</span> <span class="string">/about/</span>, <span class="attr">fa:</span> <span class="string">fa-meetup</span>&#125;, </span><br><span class="line">    <span class="string">主题:</span> &#123;<span class="attr">path:</span> <span class="string">/theme-sakura/</span>, <span class="attr">fa:</span> <span class="string">iconfont</span> <span class="string">icon-sakura</span> &#125;,</span><br><span class="line">    <span class="attr">Lab:</span> &#123;<span class="attr">path:</span> <span class="string">/lab/</span>, <span class="attr">fa:</span> <span class="string">fa-cogs</span> &#125;,</span><br><span class="line">  &#125; &#125;</span><br><span class="line">  <span class="string">客户端:</span> &#123; <span class="attr">path:</span> <span class="string">/client/</span>, <span class="attr">fa:</span> <span class="string">fa-android</span> <span class="string">faa-vertical</span> &#125;</span><br><span class="line">  <span class="attr">RSS:</span> &#123; <span class="attr">path:</span> <span class="string">/atom.xml</span>, <span class="attr">fa:</span> <span class="string">fa-rss</span> <span class="string">faa-pulse</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page sort type: -1: newer first，1: older first. 【非】</span></span><br><span class="line"><span class="attr">homePageSortType:</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page article shown number) 【非】</span></span><br><span class="line"><span class="attr">homeArticleShown:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 背景图片 【选】</span></span><br><span class="line"><span class="attr">bgn:</span> <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># startdash面板 url, title, desc img 【改】</span></span><br><span class="line"><span class="attr">startdash:</span> </span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">url:</span> <span class="string">/theme-sakura/</span>, <span class="attr">title:</span> <span class="string">Sakura</span>, <span class="attr">desc:</span> <span class="string">本站</span> <span class="string">hexo</span> <span class="string">主题</span>, <span class="attr">img:</span> <span class="string">/img/startdash/sakura.md.png</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">url:</span> <span class="string">http://space.bilibili.com/271849279</span>, <span class="attr">title:</span> <span class="string">Bilibili</span>, <span class="attr">desc:</span> <span class="string">博主的b站视频</span>, <span class="attr">img:</span> <span class="string">/img/startdash/bilibili.jpg</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">url:</span> <span class="string">/</span>, <span class="attr">title:</span> <span class="string">hojun的万事屋</span>, <span class="attr">desc:</span> <span class="string">技术服务</span>, <span class="attr">img:</span> <span class="string">/img/startdash/wangshiwu.jpg</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># your site build time or founded date</span></span><br><span class="line"><span class="comment"># 你的站点建立日期 【改】</span></span><br><span class="line"><span class="attr">siteBuildingTime:</span> <span class="number">07</span><span class="string">/17/2018</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 社交按钮(social)  url, img PC端配置 【改】</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">github:</span> &#123;<span class="attr">url:</span> <span class="string">http://github.com/honjun</span>, <span class="attr">img:</span> <span class="string">/img/social/github.png</span>&#125;</span><br><span class="line">  <span class="attr">sina:</span> &#123;<span class="attr">url:</span> <span class="string">http://weibo.com/mashirozx?is_all=1</span>, <span class="attr">img:</span> <span class="string">/img/social/sina.png</span>&#125;</span><br><span class="line">  <span class="attr">wangyiyun:</span> &#123;<span class="attr">url:</span> <span class="string">http://weibo.com/mashirozx?is_all=1</span>, <span class="attr">img:</span> <span class="string">/img/social/wangyiyun.png</span>&#125;</span><br><span class="line">  <span class="attr">zhihu:</span> &#123;<span class="attr">url:</span> <span class="string">http://weibo.com/mashirozx?is_all=1</span>, <span class="attr">img:</span> <span class="string">/img/social/zhihu.png</span>&#125;</span><br><span class="line">  <span class="attr">email:</span> &#123;<span class="attr">url:</span> <span class="string">http://weibo.com/mashirozx?is_all=1</span>, <span class="attr">img:</span> <span class="string">/img/social/email.svg</span>&#125;</span><br><span class="line">  <span class="attr">wechat:</span> &#123;<span class="attr">url:</span> <span class="string">/#</span>, <span class="attr">qrcode:</span> <span class="string">/img/custom/wechat.jpg</span>, <span class="attr">img:</span> <span class="string">/img/social/wechat.png</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 社交按钮(msocial)  url, img 移动端配置 【改】</span></span><br><span class="line"><span class="attr">msocial:</span></span><br><span class="line">  <span class="attr">github:</span> &#123;<span class="attr">url:</span> <span class="string">http://github.com/honjun</span>, <span class="attr">fa:</span> <span class="string">fa-github</span>, <span class="attr">color:</span> <span class="number">333</span>&#125;</span><br><span class="line">  <span class="attr">weibo:</span> &#123;<span class="attr">url:</span> <span class="string">http://weibo.com/mashirozx?is_all=1</span>, <span class="attr">fa:</span> <span class="string">fa-weibo</span>, <span class="attr">color:</span> <span class="string">dd4b39</span>&#125;</span><br><span class="line">  <span class="attr">qq:</span> &#123;<span class="attr">url:</span> <span class="string">https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes</span>, <span class="attr">fa:</span> <span class="string">fa-qq</span>, <span class="attr">color:</span> <span class="string">25c6fe</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/img/custom/donate/AliPayQR.jpg</span></span><br><span class="line">  <span class="attr">wechat:</span> <span class="string">/img/custom/donate/WeChanQR.jpg</span></span><br><span class="line">  <span class="attr">wechatSQ:</span> <span class="string">/img/custom/donate/WeChanSQ.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】</span></span><br><span class="line"><span class="attr">movies:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/hojun@1.2</span></span><br><span class="line">  <span class="comment"># 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">Unbroken.mp4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】</span></span><br><span class="line"><span class="attr">aplayer:</span> </span><br><span class="line">  <span class="attr">id:</span> <span class="number">2660651585</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">netease</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">playlist</span></span><br><span class="line">  <span class="attr">fixed:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mini:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">order:</span> <span class="string">random</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">volume:</span> <span class="number">0.7</span></span><br><span class="line">  <span class="attr">mutex:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Valine评论配置【改】</span></span><br><span class="line"><span class="attr">valine:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">v_appId:</span> <span class="string">GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz</span></span><br><span class="line"><span class="attr">v_appKey:</span> <span class="string">mgOpfzbkHYqU92CV4IDlAUHQ</span></span><br></pre></td></tr></table></figure><h2 id="分类页和标签页配置"><a href="#分类页和标签页配置" class="headerlink" title="分类页和标签页配置"></a>分类页和标签页配置</h2><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg"></p><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg"></p><p>配置项在\themes\Sakura\languages\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#category</span></span><br><span class="line"><span class="comment"># 按分类名创建</span></span><br><span class="line"><span class="string">技术:</span></span><br><span class="line">    <span class="comment">#中文标题</span></span><br><span class="line">    <span class="attr">zh:</span> <span class="string">野生技术协会</span> </span><br><span class="line">    <span class="comment"># 英文标题</span></span><br><span class="line">    <span class="attr">en:</span> <span class="string">Geek</span> <span class="string">–</span> <span class="string">Only</span> <span class="string">for</span> <span class="string">Love</span></span><br><span class="line">    <span class="comment"># 封面图片</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg</span></span><br><span class="line"><span class="string">生活:</span></span><br><span class="line">    <span class="attr">zh:</span> <span class="string">生活</span></span><br><span class="line">    <span class="attr">en:</span> <span class="string">live</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#tag</span></span><br><span class="line"><span class="comment"># 标签名即是标题</span></span><br><span class="line"><span class="string">悦读:</span></span><br><span class="line">    <span class="comment"># 封面图片</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg</span></span><br></pre></td></tr></table></figure><h2 id="单页面封面配置"><a href="#单页面封面配置" class="headerlink" title="单页面封面配置"></a>单页面封面配置</h2><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg"><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: comment</span><br><span class="line">date: 2018-12-20 23:13:48</span><br><span class="line">keywords: 留言板</span><br><span class="line">description: </span><br><span class="line">comments: true</span><br><span class="line"><span class="section"># 在这里配置单页面头部图片，自定义替换哦~</span></span><br><span class="line"><span class="section">photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="单页面配置"><a href="#单页面配置" class="headerlink" title="单页面配置"></a>单页面配置</h2><h3 id="番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">bangumi</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">bangumi</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-02-10 21:32:48</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">bangumis:</span></span><br><span class="line">  <span class="comment"># 番组图片</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg</span></span><br><span class="line">  <span class="comment"># 番组名</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">朝花夕誓——于离别之朝束起约定之花</span></span><br><span class="line">  <span class="comment"># 追番状态 （追番ing/已追完）</span></span><br><span class="line">    <span class="attr">status:</span> <span class="string">已追完</span></span><br><span class="line">  <span class="comment"># 追番进度</span></span><br><span class="line">    <span class="attr">progress:</span> <span class="number">100</span></span><br><span class="line">  <span class="comment"># 番剧日文名称</span></span><br><span class="line">    <span class="attr">jp:</span> <span class="string">さよならの朝に約束の花をかざろう</span></span><br><span class="line">  <span class="comment"># 放送时间</span></span><br><span class="line">    <span class="attr">time:</span> <span class="string">放送时间:</span> <span class="number">2018-02-24 </span><span class="string">SUN.</span></span><br><span class="line">  <span class="comment"># 番剧介绍</span></span><br><span class="line">    <span class="attr">desc:</span>  <span class="string">住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">朝花夕誓——于离别之朝束起约定之花</span></span><br><span class="line">    <span class="attr">status:</span> <span class="string">已追完</span></span><br><span class="line">    <span class="attr">progress:</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">jp:</span> <span class="string">さよならの朝に約束の花をかざろう</span></span><br><span class="line">    <span class="attr">time:</span> <span class="string">放送时间:</span> <span class="number">2018-02-24 </span><span class="string">SUN.</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">links</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">links</span></span><br><span class="line"><span class="comment"># 创建日期，可以改下</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-12-19 23:11:06</span> </span><br><span class="line"><span class="comment"># 图片上的标题，自定义修改</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">友人帐</span> </span><br><span class="line"><span class="attr">description:</span> </span><br><span class="line"><span class="comment"># true/false 开启/关闭评论</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span> </span><br><span class="line"><span class="comment"># 页面头部图片，自定义修改</span></span><br><span class="line"><span class="attr">photos:</span> <span class="string">https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg</span> </span><br><span class="line"><span class="comment"># 友链配置</span></span><br><span class="line"><span class="attr">links:</span> </span><br><span class="line">  <span class="comment"># 类型分组</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">个人项目</span></span><br><span class="line">    <span class="comment"># 类型简介</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">充分说明这家伙是条咸鱼</span> <span class="string">&lt;</span> <span class="string">(￣︶￣)&gt;</span></span><br><span class="line">    <span class="attr">items:</span></span><br><span class="line">    <span class="comment"># 友链链接</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">https://shino.cc/fgvf</span></span><br><span class="line">    <span class="comment"># 友链头像</span></span><br><span class="line">      <span class="attr">img:</span> <span class="string">https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><br><span class="line">    <span class="comment"># 友链站点名</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">Google</span></span><br><span class="line">    <span class="comment"># 友链介绍  下面雷同</span></span><br><span class="line">      <span class="attr">desc:</span> <span class="string">Google</span> <span class="string">镜像</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">https://shino.cc/fgvf</span></span><br><span class="line">      <span class="attr">img:</span> <span class="string">https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">Google</span></span><br><span class="line">      <span class="attr">desc:</span> <span class="string">Google</span> <span class="string">镜像</span></span><br><span class="line">  <span class="comment"># 类型分组...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">group:</span> <span class="string">小伙伴们</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">欢迎交换友链</span> <span class="string">ꉂ(ˊᗜˋ)</span></span><br><span class="line">    <span class="attr">items:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">https://shino.cc/fgvf</span></span><br><span class="line">      <span class="attr">img:</span> <span class="string">https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">Google</span></span><br><span class="line">      <span class="attr">desc:</span> <span class="string">Google</span> <span class="string">镜像</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">https://shino.cc/fgvf</span></span><br><span class="line">      <span class="attr">img:</span> <span class="string">https://cloud.moezx.cc/Picture/svg/landscape/fields.svg</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">Google</span></span><br><span class="line">      <span class="attr">desc:</span> <span class="string">Google</span> <span class="string">镜像</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="写文章配置"><a href="#写文章配置" class="headerlink" title="写文章配置"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bili video<span class="emphasis">_id [page] %&#125;</span></span><br></pre></td></tr></table></figure><p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md">hexo-tag-bili</a>。</p><p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% fb<span class="emphasis">_img src [caption] %&#125;</span></span><br></pre></td></tr></table></figure><p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md">hexo-tag-fancybox_img</a></p><h2 id="还有啥，一时想不起来……"><a href="#还有啥，一时想不起来……" class="headerlink" title="还有啥，一时想不起来……"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>]]></content>
    
    
    <summary type="html">hexo-sakura主题使用教程</summary>
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="web" scheme="http://example.com/tags/web/"/>
    
    <category term="悦读" scheme="http://example.com/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
</feed>
